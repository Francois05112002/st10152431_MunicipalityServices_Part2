// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using st10152431_MunicipalityService.Data;

#nullable disable

namespace st10152431_MunicipalityService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251015125319_InitialCreateWithSeedData")]
    partial class InitialCreateWithSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("st10152431_MunicipalityService.Models.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Announcements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Maintenance",
                            CreatedBy = "0817246624",
                            EndDate = new DateTime(2025, 10, 20, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            Location = "Northern Suburbs",
                            Name = "Water Supply Maintenance",
                            StartDate = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Category = "General",
                            CreatedBy = "0987654321",
                            EndDate = new DateTime(2025, 11, 15, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            Location = "All areas",
                            Name = "New Recycling Schedule",
                            StartDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("st10152431_MunicipalityService.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Community",
                            CreatedBy = "0817246624",
                            EndDate = new DateTime(2025, 10, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Central Park, Cape Town",
                            Name = "Community Clean-Up Day",
                            StartDate = new DateTime(2025, 10, 22, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Sports",
                            CreatedBy = "0123456789",
                            EndDate = new DateTime(2025, 10, 31, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Sports Stadium, Cape Town",
                            Name = "Local Football Tournament",
                            StartDate = new DateTime(2025, 10, 29, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("st10152431_MunicipalityService.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Issues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Road",
                            Description = "Large pothole causing traffic issues",
                            Location = "123 Main Street, Cape Town",
                            Timestamp = new DateTime(2025, 10, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "0817246624"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Water",
                            Description = "Water pipe burst on sidewalk",
                            Location = "45 Beach Road, Sea Point",
                            Timestamp = new DateTime(2025, 10, 12, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = "0123456789"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Electricity",
                            Description = "Streetlight not working for 2 weeks",
                            Location = "78 Park Avenue, Gardens",
                            Timestamp = new DateTime(2025, 10, 14, 9, 15, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("st10152431_MunicipalityService.Models.PulseResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Date", "UserId")
                        .IsUnique();

                    b.ToTable("PulseResponses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "Satisfied",
                            CreatedAt = new DateTime(2025, 10, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Date = "2025-10-15",
                            UserId = "0123456789"
                        });
                });

            modelBuilder.Entity("st10152431_MunicipalityService.Models.User", b =>
                {
                    b.Property<string>("CellphoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PulseDatesString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PulseDates");

                    b.HasKey("CellphoneNumber");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            CellphoneNumber = "0817246624",
                            Name = "Test User",
                            PulseDatesString = ""
                        },
                        new
                        {
                            CellphoneNumber = "0123456789",
                            Name = "John Doe",
                            PulseDatesString = ""
                        },
                        new
                        {
                            CellphoneNumber = "0987654321",
                            Name = "Jane Smith",
                            PulseDatesString = ""
                        });
                });

            modelBuilder.Entity("st10152431_MunicipalityService.Models.Issue", b =>
                {
                    b.HasOne("st10152431_MunicipalityService.Models.User", null)
                        .WithMany("Issues")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("st10152431_MunicipalityService.Models.User", b =>
                {
                    b.Navigation("Issues");
                });
#pragma warning restore 612, 618
        }
    }
}
